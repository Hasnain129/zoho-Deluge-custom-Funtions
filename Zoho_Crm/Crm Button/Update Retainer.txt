try 
{
	// // ///////////////////////////////////////////////////////getting Options from ret
	MessInfo = "";
	ret_det = zoho.crm.getRecordById("Down_Payment_Invoices",ri_id);
	RET_Inv_ID = ret_det.get("Retainer_Invoice_ID");
	info "Retainer Invoice ID : " + RET_Inv_ID;
	if(RET_Inv_ID == null)
	{
		MessInfo = "No Retainer Invoice found to update. Please generate the Retainer Invoice";
	}
	else
	{
		so_id = ret_det.get("Sales_Order").get("id");
		Option_Type = ret_det.get("Retainer_by");
		Entry_Option1_Amount = ifnull(ret_det.get("Amount"),0);
		Entry_Option2_Percent = ifnull(ret_det.get("Percent"),0);
		Entry_Option3_LineItems = ifnull(ret_det.get("Line_Items"),"");
		///////////////////////////////////////////////////////////////  fetch sales order
		sales_order = zoho.crm.getRecordById("Sales_Orders",so_id);
		SO_Grand_Total = sales_order.get("Grand_Total");
		Related_retainer_details = zoho.crm.getRelatedRecords("Retainer_Invoice","Sales_Orders",so_id);
		Retainer_total = 0;
		for each  data in Related_retainer_details
		{
			if(data.get("Paid") != "Voided" && data.get("Retainer_Invoice_Generated") == true && data.get("id") != ri_id)
			{
				Retainer_total = Retainer_total + data.get("Down_Payment_Amount");
			}
		}
		SO_No = sales_order.get("SO_No");
		qoute_id = sales_order.get("Quote_Name").get("id");
		customer_id = sales_order.get("Account_Name").get("id");
		contact_id = sales_order.get("Contact_Name").get("id");
		contact_name = sales_order.get("Contact_Name").get("name");
		Quote_autono = sales_order.get("Quote_No");
		Project_id = ifnull(sales_order.get("Deal_Name"),"").get("id");
		Project_name = ifnull(sales_order.get("Deal_Name"),"").get("name");
		dueDate = sales_order.get("Due_Date");
		Organization_Name = sales_order.get("Organization_Name");
		Currency = sales_order.get("Currency");
		//////////////////////////////////////////////////////////////// fetch qoute
		Quote_details = zoho.crm.getRecordById("Quotes",qoute_id);
		orderNumber = Quote_details.get("Quote_Number");
		Design_id = ifnull(Quote_details.get("Design"),"").get("id");
		Quote_total = Quote_details.get("Grand_Total");
		Downpayment = Quote_details.get("Down_Payment");
		Quote_Owner = Quote_details.get("Owner");
		Quote_Owner_name = Quote_details.get("Owner").get("name");
		Quote_Owner_id = Quote_details.get("Owner").get("id");
		////////////////////////////// Quote Owner Details ///////////////////////////////
		Quote_Owner_details = zoho.crm.getRecordById("users",Quote_Owner_id);
		Quote_Owner_Data = Quote_Owner_details.get("users").tomap();
		Quote_Owner_email = Quote_Owner_Data.get("email");
		//////////////////////////////// Contact Data ///////////////////////////////
		Contact_details = zoho.crm.getRecordById("Contacts",contact_id);
		crm_contact_email = Contact_details.get("Email");
		////////////////////////////////////////////////////////////////////////////////////
		Poject_obj = zoho.crm.getRecordById("Deals",Project_id);
		Project_owner = Poject_obj.get("Owner");
		PO_ID = Poject_obj.get("Project_ID");
		PO_Ref = ifnull(Poject_obj.get("PO_Reference"),"");
		Invoice_recipient_email = ifnull(Poject_obj.get("Invoice_Recipient_Email"),"");
		// 		info Invoice_recipient_email;
		///////////////////////////////////////// Importing Customer and Contact ///////////////
		Import_account = invokeurl
		[
			url :"https://books.zoho.com/api/v3/crm/account/" + customer_id + "/import?organization_id=666479573"
			type :POST
			connection:"zoho_books"
		];
		// info Import_account;
		////////////////////////////////////////Fetch Books Contact ///////////////////
		searchParam = {"zcrm_account_id":customer_id};
		BooksContact = zoho.books.getRecords("contacts","666479573",searchParam);
		Books_contact_Info = BooksContact.get("contacts").get(0);
		Book_contact_ID = Books_contact_Info.get("contact_id");
		//info Book_contact_ID;
		////////////////////////////////////////////////////////////////////////
		////////////////////////////////Fetch Books User ID //////////////////////////
		searchParam = {"email":Quote_Owner_email};
		BooksUsers = zoho.books.getRecords("users","666479573",searchParam);
		Books_User_Info = BooksUsers.get("users").get(0);
		Book_User_ID = Books_User_Info.get("user_id");
		Book_User_email = Books_User_Info.get("email");
		//info Book_User_ID;
		/////////////////////////////////////////////////////////////////////////////////////
		contact_persons = invokeurl
		[
			url :"https://books.zoho.com/api/v3/contacts/" + Book_contact_ID + "/contactpersons?organization_id=666479573"
			type :GET
			connection:"zoho_books"
		];
		contact_Fname = "";
		contact_Lname = "";
		contact_email = "";
		count = 0;
		for each  data_contact in contact_persons.get("contact_persons")
		{
			if(Invoice_recipient_email == "")
			{
				if(data_contact.get("email") == crm_contact_email)
				{
					contact_email = data_contact.get("email");
					contact_Fname = data_contact.get("first_name");
					contact_Lname = data_contact.get("last_name");
					Inv_contact_id = data_contact.get("contact_person_id");
				}
			}
			else
			{
				if(data_contact.get("email") == Invoice_recipient_email)
				{
					contact_email = data_contact.get("email");
					contact_Fname = data_contact.get("first_name");
					contact_Lname = data_contact.get("last_name");
					Inv_contact_id = data_contact.get("contact_person_id");
					search_contacts = zoho.crm.searchRecords("Contacts","((Email:equals:" + Invoice_recipient_email + "))");
					for each  w in search_contacts
					{
						contact_id = ifnull(w.get("id"),"");
					}
				}
			}
		}
		///////////////////////////////////////////////////////////////  decisons by entry variable
		if(Option_Type == "Amount")
		{
			/////////////////////////////////////////////////////////////////////////////////////
			Total_amount = sales_order.get("Grand_Total");
			info Total_amount;
			if(Entry_Option1_Amount < Total_amount)
			{
				////////////////////// Terms and conditions and template //////////////////
				if(Organization_Name == "Blink Signs")
				{
					terms_and_conditions = sales_order.get("Terms_and_Conditions");
					Template_id = "1316483000000030003";
				}
				else if(Organization_Name == "Blink Swag")
				{
					terms_and_conditions = sales_order.get("Terms_and_Conditions_Swag");
					Template_id = "1316483000009817035";
				}
				else if(Organization_Name == "Blink Sourcing")
				{
					terms_and_conditions = sales_order.get("Terms_and_Conditions");
					Template_id = "1316483000017238436";
				}
				////////////////////// checking if not exceeding total of SO /////////////////////////
				Summed_Retainer_Amt = Retainer_total + Entry_Option1_Amount;
				if(Summed_Retainer_Amt <= SO_Grand_Total)
				{
					/////////////////////// Creating a product details map  ///////////////////////////////
					Description = "Advance Payment for Sales Order: " + SO_No;
					item = Map();
					item.put("description",Description);
					item.put("rate",Entry_Option1_Amount);
					///////////////////// Data of Custom Fields /////////////////////////////////
					cf_list = List();
					cf_org_name = Map();
					cf_org_name.put("label","Organization Name");
					cf_org_name.put("value",Organization_Name);
					cf_list.add(cf_org_name);
					/////////////////////////////////////////////////
					cf_contact = Map();
					cf_contact.put("label","Contact");
					cf_contact.put("value",contact_name);
					cf_list.add(cf_contact);
					/////////////////////////////////////////////////
					cf_project = Map();
					cf_project.put("label","Project Name");
					cf_project.put("value",Project_name);
					cf_list.add(cf_project);
					/////////////////////////////////////////////////
					cf_project = Map();
					cf_project.put("label","Project ID");
					cf_project.put("value",PO_ID);
					cf_list.add(cf_project);
					/////////////////////////////////////////////////
					cf_quote = Map();
					cf_quote.put("label","Quote #");
					cf_quote.put("value",Quote_autono);
					cf_list.add(cf_quote);
					//////////////////////////////////////////////////
					cf_po_So = Map();
					cf_po_So.put("label","SO #");
					cf_po_So.put("value",SO_No);
					cf_list.add(cf_po_So);
					//////////////////////////////////////////////////
					// 			cf_po_quote_owner = Map();
					// 			cf_po_quote_owner.put("label","Quote Owner");
					// 			cf_po_quote_owner.put("value",Book_User_ID);
					// 			cf_list.add(cf_po_quote_owner);
					//////////////////////////////////////////////////
					cf_po_reference = Map();
					cf_po_reference.put("label","Client PO");
					cf_po_reference.put("value",PO_Ref);
					cf_list.add(cf_po_reference);
					//////////////////////////////////////////////////
					cf_po_owner_email = Map();
					cf_po_owner_email.put("label","Owner Email");
					cf_po_owner_email.put("value",Book_User_email);
					cf_list.add(cf_po_owner_email);
					/////////////////////Configuring Payment ///////////////////////////////
					/////////////////////////// Selecting Currency //////////////////
					if(Currency == "USD")
					{
						currency_id = 1316483000000000097;
						///////////////Configuring Authorize.net /////////////////////////
						payment_getway = Map();
						payment_getway.put("configured",true);
						payment_getway.put("can_show_billing_address",false);
						payment_getway.put("is_bank_account_applicable",true);
						payment_getway.put("gateway_name","authorize_net");
						payment_options = Map();
						payment_options.put("payment_gateways",{payment_getway});
					}
					else if(Currency == "CAD")
					{
						currency_id = 1316483000000000101;
						///////////////Configuring Paypal /////////////////////////
						payment_getway = Map();
						payment_getway.put("configured",true);
						payment_getway.put("can_show_billing_address",false);
						payment_getway.put("additional_field1","standard");
						payment_getway.put("is_bank_account_applicable",true);
						payment_getway.put("can_pay_using_new_card",true);
						payment_getway.put("gateway_name","paypal");
						payment_options = Map();
						payment_options.put("payment_gateways",{payment_getway});
					}
					/////////////////////Update Invoice in books ////////////////////////////////
					Ret_Invoice_Data = Map();
					Ret_Invoice_Data.put("customer_id",Book_contact_ID);
					Ret_Invoice_Data.put("reference_number",SO_No);
					//Ret_Invoice_Data.put("date",dueDate);
					Ret_Invoice_Data.put("line_items",{item});
					Ret_Invoice_Data.put("terms",terms_and_conditions);
					Ret_Invoice_Data.put("template_id",Template_id);
					//Ret_Invoice_Data.put("payment_terms_label",Terms);
					Ret_Invoice_Data.put("contact_persons",{Inv_contact_id});
					Ret_Invoice_Data.put("payment_options",payment_options);
					Ret_Invoice_Data.put("is_emailed",true);
					Ret_Invoice_Data.put("custom_fields",cf_list);
					Ret_Invoice_Data.put("currency_id",currency_id);
					retainer_invoice_resp = zoho.books.updateRecord("retainerinvoices","666479573",RET_Inv_ID,Ret_Invoice_Data);
					info retainer_invoice_resp;
					invoice_Number = retainer_invoice_resp.get("retainerinvoice").get("retainerinvoice_number");
					invoice_total = retainer_invoice_resp.get("retainerinvoice").get("total");
					Retainer_Invoice_ID = retainer_invoice_resp.get("retainerinvoice").get("retainerinvoice_id");
					invoice_Date = retainer_invoice_resp.get("retainerinvoice").get("date");
					invoice_url = retainer_invoice_resp.get("retainerinvoice").get("invoice_url");
					//////////////////////////////////// Organization Data ////////////////////////////////////
					Org_Data = invokeurl
					[
						url :"https://books.zoho.com/api/v3/organizations?organization_id=666479573"
						type :GET
						connection:"zoho_books"
					];
					Organization = Org_Data.get("organizations").tomap();
					Org_Name = Organization.get("name");
					Owner_Name = Organization.get("contact_name");
					/////////////////////////// Mail subject and body /////////////////////////////////////////////////////
					subject_Data = "Retainer Invoice from " + Org_Name + " (" + invoice_Number + ")" + "- Project Name" + " (" + Project_name + ") & Project# " + "(" + PO_ID + ")";
					////////////////////////////////////////////////////////////////////////////////////////////////////////
					para = Map();
					para.put("accept","pdf");
					invoice_file = invokeurl
					[
						url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "?organization_id=666479573"
						type :GET
						parameters:para
						connection:"zoho_books"
					];
					//////////////////////////////////////////////////////////////////////////////////////////////////////////////
					body = "Dear " + contact_Fname + " " + contact_Lname + ",<br><br>Thanks for your business.<br><br>The Down Payment invoice " + invoice_Number + " is attached with this email. You can choose the easy way out and <a href='" + invoice_url + "'>pay online for this invoice.</a><br>Here is an overview of the invoice for your reference.<br><br>Retainer Invoice Overview:<br>Invoice: " + invoice_Number + "<br>Date : " + invoice_Date + "<br>Amount : $" + invoice_total + "<br><br>It was great working with you. Looking forward to working with you again.<br><br>Regards,<br>Blink Signs LLC";
					////////////////////////////////////////////////////////////////////mark Invoice Sent/////////////////////////////////////////
					// 				resp3 = invokeurl
					// 				[
					// 					url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "/status/sent?organization_id=666479573"
					// 					type :POST
					// 					connection:"zoho_books"
					// 				];
					// 				//////////////// Create Comment on the Retainer Invoice /////////////////////////////////
					// 				Comment = Map();
					// 				Comment.put("description","Retainer Invoice emailed to " + contact_email);
					// 				Comment.put("show_comment_to_clients",false);
					// 				JsonString4 = Map();
					// 				JsonString4.put("JSONString",Comment);
					// 				//////////////////////////////////////////////////////////////////////////////////////////////////////////
					// 				resp4 = invokeurl
					// 				[
					// 					url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "/comments?organization_id=666479573"
					// 					type :POST
					// 					parameters:JsonString4
					// 					connection:"zoho_books"
					// 				];
					// 				info resp4;
					//////////////////////////// creating Down Payment Invoice in DPI module ///////////////////////////////////////////
					mp = Map();
					mp.put("Organization_Name",Organization_Name);
					mp.put("Owner",Project_owner);
					mp.put("Name",invoice_Number);
					mp.put("Project",Project_id);
					mp.put("Contact",contact_id);
					mp.put("Customer",customer_id);
					mp.put("Down_Payment_Amount",invoice_total);
					mp.put("Retainer_Invoice_ID",Retainer_Invoice_ID);
					mp.put("Invoice_Date",invoice_Date);
					mp.put("Invoice_URL",invoice_url);
					mp.put("Contact_First_Name",contact_Fname);
					mp.put("Contact_Last_Name",contact_Lname);
					mp.put("Subject",subject_Data);
					mp.put("Email",contact_email);
					mp.put("Paid","Active");
					mp.put("Currency",Currency);
					//mp.put("Retainer_Invoice_Generated",true);
					Update_dpi = zoho.crm.updateRecord("Down_Payment_Invoices",ri_id,mp,{"trigger":{"workflow"}});
					dpi_id = Update_dpi.get("id");
					//----------------------------
					//////Uploading attachment in the DPI module entry
					attach_dpi_pd = zoho.crm.attachFile("Down_Payment_Invoices",dpi_id,invoice_file);
					info Retainer_Invoice_ID;
					openurl("https://crm.zoho.com/crm/org666155072/tab/CustomModule41/" + ri_id,"parent window");
					MessInfo = "Retainer Invoice has been updated";
				}
				else
				{
					MessInfo = "Your Total Retainer Amounts exceed the SO Total";
				}
			}
			else
			{
				MessInfo = "You have enterd more amount then Total";
			}
		}
		////////////////////////////////////////////////////////////////// Line Item Option ///////////////////////////////
		else if(Option_Type == "Line Item")
		{
			to_charge_amount = 0;
			Items_no = Entry_Option3_LineItems.tolist();
			Largest_Item = Items_no.largest();
			Product_Details = sales_order.get("Product_Details").tolist();
			itemlist = List();
			if(Largest_Item <= Product_Details.size().tolong())
			{
				for each  data1 in Product_Details
				{
					for each  data2 in Items_no
					{
						item_count = data2 - 1;
						itemlist.add(item_count);
					}
				}
				distinct = itemlist.distinct();
				productList = List();
				info productList;
				for each  data3 in distinct
				{
					shortlisted_prod = Product_Details.get(data3);
					to_charge_amount = to_charge_amount + shortlisted_prod.get("net_total");
				}
				info to_charge_amount;
				////////////////////// Terms and conditions and template //////////////////
				if(Organization_Name == "Blink Signs")
				{
					terms_and_conditions = sales_order.get("Terms_and_Conditions");
					Template_id = "1316483000000030003";
				}
				else if(Organization_Name == "Blink Swag")
				{
					terms_and_conditions = sales_order.get("Terms_and_Conditions_Swag");
					Template_id = "1316483000009817035";
				}
				else if(Organization_Name == "Blink Sourcing")
				{
					terms_and_conditions = sales_order.get("Terms_and_Conditions");
					Template_id = "1316483000017238436";
				}
				////////////////////// checking if not exceeding total of SO /////////////////////////
				Summed_Retainer_Amt = Retainer_total + to_charge_amount;
				if(Summed_Retainer_Amt <= SO_Grand_Total)
				{
					/////////////////////// Creating a product details map  ///////////////////////////////
					Description = "Advance Payment for Sales Order: " + SO_No;
					item = Map();
					item.put("description",Description);
					item.put("rate",to_charge_amount);
					///////////////////// Data of Custom Fields /////////////////////////////////
					cf_list = List();
					cf_org_name = Map();
					cf_org_name.put("label","Organization Name");
					cf_org_name.put("value",Organization_Name);
					cf_list.add(cf_org_name);
					/////////////////////////////////////////////////
					cf_contact = Map();
					cf_contact.put("label","Contact");
					cf_contact.put("value",contact_name);
					cf_list.add(cf_contact);
					/////////////////////////////////////////////////
					cf_project = Map();
					cf_project.put("label","Project Name");
					cf_project.put("value",Project_name);
					cf_list.add(cf_project);
					/////////////////////////////////////////////////
					cf_project = Map();
					cf_project.put("label","Project ID");
					cf_project.put("value",PO_ID);
					cf_list.add(cf_project);
					/////////////////////////////////////////////////
					cf_quote = Map();
					cf_quote.put("label","Quote #");
					cf_quote.put("value",Quote_autono);
					cf_list.add(cf_quote);
					//////////////////////////////////////////////////
					cf_po_So = Map();
					cf_po_So.put("label","SO #");
					cf_po_So.put("value",SO_No);
					cf_list.add(cf_po_So);
					//////////////////////////////////////////////////
					// 			cf_po_quote_owner = Map();
					// 			cf_po_quote_owner.put("label","Quote Owner");
					// 			cf_po_quote_owner.put("value",Book_User_ID);
					// 			cf_list.add(cf_po_quote_owner);
					//////////////////////////////////////////////////
					cf_po_reference = Map();
					cf_po_reference.put("label","Client PO");
					cf_po_reference.put("value",PO_Ref);
					cf_list.add(cf_po_reference);
					//////////////////////////////////////////////////
					cf_po_owner_email = Map();
					cf_po_owner_email.put("label","Owner Email");
					cf_po_owner_email.put("value",Book_User_email);
					cf_list.add(cf_po_owner_email);
					/////////////////////Configuring Payment ///////////////////////////////
					/////////////////////////// Selecting Currency //////////////////
					if(Currency == "USD")
					{
						currency_id = 1316483000000000097;
						///////////////Configuring Authorize.net /////////////////////////
						payment_getway = Map();
						payment_getway.put("configured",true);
						payment_getway.put("can_show_billing_address",false);
						payment_getway.put("is_bank_account_applicable",true);
						payment_getway.put("gateway_name","authorize_net");
						payment_options = Map();
						payment_options.put("payment_gateways",{payment_getway});
					}
					else if(Currency == "CAD")
					{
						currency_id = 1316483000000000101;
						///////////////Configuring Paypal /////////////////////////
						payment_getway = Map();
						payment_getway.put("configured",true);
						payment_getway.put("can_show_billing_address",false);
						payment_getway.put("additional_field1","standard");
						payment_getway.put("is_bank_account_applicable",true);
						payment_getway.put("can_pay_using_new_card",true);
						payment_getway.put("gateway_name","paypal");
						payment_options = Map();
						payment_options.put("payment_gateways",{payment_getway});
					}
					///////////////////////Update Invoice in books ////////////////////////////////
					Ret_Invoice_Data = Map();
					Ret_Invoice_Data.put("customer_id",Book_contact_ID);
					Ret_Invoice_Data.put("reference_number",SO_No);
					//Ret_Invoice_Data.put("date",dueDate);
					Ret_Invoice_Data.put("line_items",{item});
					Ret_Invoice_Data.put("terms",terms_and_conditions);
					Ret_Invoice_Data.put("template_id",Template_id);
					// 		Ret_Invoice_Data.put("payment_terms_label",Terms);
					Ret_Invoice_Data.put("contact_persons",{Inv_contact_id});
					Ret_Invoice_Data.put("payment_options",payment_options);
					Ret_Invoice_Data.put("is_emailed",true);
					Ret_Invoice_Data.put("custom_fields",cf_list);
					Ret_Invoice_Data.put("currency_id",currency_id);
					retainer_invoice_resp = zoho.books.updateRecord("retainerinvoices","666479573",RET_Inv_ID,Ret_Invoice_Data);
					info retainer_invoice_resp;
					invoice_Number = retainer_invoice_resp.get("retainerinvoice").get("retainerinvoice_number");
					invoice_total = retainer_invoice_resp.get("retainerinvoice").get("total");
					Retainer_Invoice_ID = retainer_invoice_resp.get("retainerinvoice").get("retainerinvoice_id");
					invoice_Date = retainer_invoice_resp.get("retainerinvoice").get("date");
					invoice_url = retainer_invoice_resp.get("retainerinvoice").get("invoice_url");
					//////////////////////////////////// Organization Data ////////////////////////////////////
					Org_Data = invokeurl
					[
						url :"https://books.zoho.com/api/v3/organizations?organization_id=666479573"
						type :GET
						connection:"zoho_books"
					];
					Organization = Org_Data.get("organizations").tomap();
					Org_Name = Organization.get("name");
					Owner_Name = Organization.get("contact_name");
					/////////////////////////// Mail subject and body /////////////////////////////////////////////////////
					subject_Data = "Retainer Invoice from " + Org_Name + " (" + invoice_Number + ")" + "- Project Name" + " (" + Project_name + ") & Project# " + "(" + PO_ID + ")";
					////////////////////////////////////////////////////////////////////////////////////////////////////////
					para = Map();
					para.put("accept","pdf");
					invoice_file = invokeurl
					[
						url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "?organization_id=666479573"
						type :GET
						parameters:para
						connection:"zoho_books"
					];
					//////////////////////////////////////////////////////////////////////////////////////////////////////////////
					body = "Dear " + contact_Fname + " " + contact_Lname + ",<br><br>Thanks for your business.<br><br>The Down Payment invoice " + invoice_Number + " is attached with this email. You can choose the easy way out and <a href='" + invoice_url + "'>pay online for this invoice.</a><br>Here is an overview of the invoice for your reference.<br><br>Retainer Invoice Overview:<br>Invoice: " + invoice_Number + "<br>Date : " + invoice_Date + "<br>Amount : $" + invoice_total + "<br><br>It was great working with you. Looking forward to working with you again.<br><br>Regards,<br>Blink Signs LLC";
					/////////////////////////////////////////////////////////////////////////////////////////////////////////////
					// 				////////////////////////////////////////////////////////////////////mark Invoice Sent/////////////////////////////////////////
					// 				resp3 = invokeurl
					// 				[
					// 					url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "/status/sent?organization_id=666479573"
					// 					type :POST
					// 					connection:"zoho_books"
					// 				];
					// 				//////////////// Create Comment on the Retainer Invoice /////////////////////////////////
					// 				Comment = Map();
					// 				Comment.put("description","Retainer Invoice emailed to " + contact_email);
					// 				Comment.put("show_comment_to_clients",false);
					// 				JsonString4 = Map();
					// 				JsonString4.put("JSONString",Comment);
					// 				//////////////////////////////////////////////////////////////////////////////////////////////////////////
					// 				resp4 = invokeurl
					// 				[
					// 					url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "/comments?organization_id=666479573"
					// 					type :POST
					// 					parameters:JsonString4
					// 					connection:"zoho_books"
					// 				];
					// 				info resp4;
					//////////////////////////// creating Down Payment Invoice in DPI module ///////////////////////////////////////////
					mp = Map();
					mp.put("Organization_Name",Organization_Name);
					mp.put("Owner",Project_owner);
					mp.put("Name",invoice_Number);
					mp.put("Project",Project_id);
					mp.put("Contact",contact_id);
					mp.put("Customer",customer_id);
					mp.put("Down_Payment_Amount",invoice_total);
					mp.put("Retainer_Invoice_ID",Retainer_Invoice_ID);
					mp.put("Invoice_Date",invoice_Date);
					mp.put("Invoice_URL",invoice_url);
					mp.put("Contact_First_Name",contact_Fname);
					mp.put("Contact_Last_Name",contact_Lname);
					mp.put("Subject",subject_Data);
					mp.put("Email",contact_email);
					mp.put("Paid","Active");
					mp.put("Currency",Currency);
					//mp.put("Retainer_Invoice_Generated",true);
					Update_dpi = zoho.crm.updateRecord("Down_Payment_Invoices",ri_id,mp,{"trigger":{"workflow"}});
					dpi_id = Update_dpi.get("id");
					//----------------------------
					// Uploading attachment in the DPI module entry
					attach_dpi_pd = zoho.crm.attachFile("Down_Payment_Invoices",dpi_id,invoice_file);
					openurl("https://crm.zoho.com/crm/org666155072/tab/CustomModule41/" + ri_id,"parent window");
					MessInfo = "Retainer Invoice has been updated";
				}
				else
				{
					MessInfo = "Your Total Retainer Amounts exceed the SO Total";
				}
			}
			else
			{
				MessInfo = "Please enter correct Line Item No";
			}
		}
		///////////////////////////////////////////////// By percentage ////////////////////////////////
		else if(Option_Type == "%")
		{
			Total_amount = sales_order.get("Grand_Total");
			prp_percenatage = Entry_Option2_Percent / 100;
			due_amount = Total_amount * prp_percenatage;
			////////////////////// Terms and conditions and template //////////////////
			if(Organization_Name == "Blink Signs")
			{
				terms_and_conditions = sales_order.get("Terms_and_Conditions");
				Template_id = "1316483000000030003";
			}
			else if(Organization_Name == "Blink Swag")
			{
				terms_and_conditions = sales_order.get("Terms_and_Conditions_Swag");
				Template_id = "1316483000009817035";
			}
			else if(Organization_Name == "Blink Sourcing")
			{
				terms_and_conditions = sales_order.get("Terms_and_Conditions");
				Template_id = "1316483000017238436";
			}
			////////////////////// checking if not exceeding total of SO /////////////////////////
			Summed_Retainer_Amt = Retainer_total + due_amount;
			if(Summed_Retainer_Amt <= SO_Grand_Total)
			{
				/////////////////////// Creating a product details map  ///////////////////////////////
				Description = "Advance Payment for Sales Order: " + SO_No;
				item = Map();
				item.put("description",Description);
				item.put("rate",due_amount);
				///////////////////// Data of Custom Fields /////////////////////////////////
				cf_list = List();
				cf_org_name = Map();
				cf_org_name.put("label","Organization Name");
				cf_org_name.put("value",Organization_Name);
				cf_list.add(cf_org_name);
				/////////////////////////////////////////////////
				cf_contact = Map();
				cf_contact.put("label","Contact");
				cf_contact.put("value",contact_name);
				cf_list.add(cf_contact);
				/////////////////////////////////////////////////
				cf_project = Map();
				cf_project.put("label","Project Name");
				cf_project.put("value",Project_name);
				cf_list.add(cf_project);
				/////////////////////////////////////////////////
				cf_project = Map();
				cf_project.put("label","Project ID");
				cf_project.put("value",PO_ID);
				cf_list.add(cf_project);
				/////////////////////////////////////////////////
				cf_quote = Map();
				cf_quote.put("label","Quote #");
				cf_quote.put("value",Quote_autono);
				cf_list.add(cf_quote);
				//////////////////////////////////////////////////
				cf_po_So = Map();
				cf_po_So.put("label","SO #");
				cf_po_So.put("value",SO_No);
				cf_list.add(cf_po_So);
				//////////////////////////////////////////////////
				// 		cf_po_quote_owner = Map();
				// 		cf_po_quote_owner.put("label","Quote Owner");
				// 		cf_po_quote_owner.put("value",Book_User_ID);
				// 		cf_list.add(cf_po_quote_owner);
				//////////////////////////////////////////////////
				cf_po_reference = Map();
				cf_po_reference.put("label","Client PO");
				cf_po_reference.put("value",PO_Ref);
				cf_list.add(cf_po_reference);
				//////////////////////////////////////////////////
				cf_po_owner_email = Map();
				cf_po_owner_email.put("label","Owner Email");
				cf_po_owner_email.put("value",Book_User_email);
				cf_list.add(cf_po_owner_email);
				/////////////////////Configuring Payment ///////////////////////////////
				/////////////////////////// Selecting Currency //////////////////
				if(Currency == "USD")
				{
					currency_id = 1316483000000000097;
					///////////////Configuring Authorize.net /////////////////////////
					payment_getway = Map();
					payment_getway.put("configured",true);
					payment_getway.put("can_show_billing_address",false);
					payment_getway.put("is_bank_account_applicable",true);
					payment_getway.put("gateway_name","authorize_net");
					payment_options = Map();
					payment_options.put("payment_gateways",{payment_getway});
				}
				else if(Currency == "CAD")
				{
					currency_id = 1316483000000000101;
					///////////////Configuring Paypal /////////////////////////
					payment_getway = Map();
					payment_getway.put("configured",true);
					payment_getway.put("can_show_billing_address",false);
					payment_getway.put("additional_field1","standard");
					payment_getway.put("is_bank_account_applicable",true);
					payment_getway.put("can_pay_using_new_card",true);
					payment_getway.put("gateway_name","paypal");
					payment_options = Map();
					payment_options.put("payment_gateways",{payment_getway});
				}
				///////////////////////Update Invoice in books ////////////////////////////////
				Ret_Invoice_Data = Map();
				Ret_Invoice_Data.put("customer_id",Book_contact_ID);
				Ret_Invoice_Data.put("reference_number",SO_No);
				//Ret_Invoice_Data.put("date",dueDate);
				Ret_Invoice_Data.put("line_items",{item});
				Ret_Invoice_Data.put("terms",terms_and_conditions);
				Ret_Invoice_Data.put("template_id",Template_id);
				// 		Ret_Invoice_Data.put("payment_terms_label",Terms);
				Ret_Invoice_Data.put("contact_persons",{Inv_contact_id});
				Ret_Invoice_Data.put("payment_options",payment_options);
				Ret_Invoice_Data.put("is_emailed",true);
				Ret_Invoice_Data.put("custom_fields",cf_list);
				Ret_Invoice_Data.put("currency_id",currency_id);
				retainer_invoice_resp = zoho.books.updateRecord("retainerinvoices","666479573",RET_Inv_ID,Ret_Invoice_Data);
				info retainer_invoice_resp;
				invoice_Number = retainer_invoice_resp.get("retainerinvoice").get("retainerinvoice_number");
				invoice_total = retainer_invoice_resp.get("retainerinvoice").get("total");
				Retainer_Invoice_ID = retainer_invoice_resp.get("retainerinvoice").get("retainerinvoice_id");
				invoice_Date = retainer_invoice_resp.get("retainerinvoice").get("date");
				invoice_url = retainer_invoice_resp.get("retainerinvoice").get("invoice_url");
				//////////////////////////////////// Organization Data ////////////////////////////////////
				Org_Data = invokeurl
				[
					url :"https://books.zoho.com/api/v3/organizations?organization_id=666479573"
					type :GET
					connection:"zoho_books"
				];
				Organization = Org_Data.get("organizations").tomap();
				Org_Name = Organization.get("name");
				Owner_Name = Organization.get("contact_name");
				/////////////////////////// Mail subject and body /////////////////////////////////////////////////////
				subject_Data = "Retainer Invoice from " + Org_Name + " (" + invoice_Number + ")" + "- Project Name" + " (" + Project_name + ") & Project# " + "(" + PO_ID + ")";
				////////////////////////////////////////////////////////////////////////////////////////////////////////
				para = Map();
				para.put("accept","pdf");
				invoice_file = invokeurl
				[
					url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "?organization_id=666479573"
					type :GET
					parameters:para
					connection:"zoho_books"
				];
				//////////////////////////////////////////////////////////////////////////////////////////////////////////////
				body = "Dear " + contact_Fname + " " + contact_Lname + ",<br><br>Thanks for your business.<br><br>The Down Payment invoice " + invoice_Number + " is attached with this email. You can choose the easy way out and <a href='" + invoice_url + "'>pay online for this invoice.</a><br>Here is an overview of the invoice for your reference.<br><br>Retainer Invoice Overview:<br>Invoice: " + invoice_Number + "<br>Date : " + invoice_Date + "<br>Amount : $" + invoice_total + "<br><br>It was great working with you. Looking forward to working with you again.<br><br>Regards,<br>Blink Signs LLC";
				////////////////////////////////////////////////////////////////////mark Invoice Sent/////////////////////////////////////////
				// 			resp3 = invokeurl
				// 			[
				// 				url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "/status/sent?organization_id=666479573"
				// 				type :POST
				// 				connection:"zoho_books"
				// 			];
				// 			//////////////// Create Comment on the Retainer Invoice /////////////////////////////////
				// 			Comment = Map();
				// 			Comment.put("description","Retainer Invoice emailed to " + contact_email);
				// 			Comment.put("show_comment_to_clients",false);
				// 			JsonString4 = Map();
				// 			JsonString4.put("JSONString",Comment);
				// 			//////////////////////////////////////////////////////////////////////////////////////////////////////////
				// 			resp4 = invokeurl
				// 			[
				// 				url :"https://books.zoho.com/api/v3/retainerinvoices/" + Retainer_Invoice_ID + "/comments?organization_id=666479573"
				// 				type :POST
				// 				parameters:JsonString4
				// 				connection:"zoho_books"
				// 			];
				// 			info resp4;
				//////////////////////////// creating Down Payment Invoice in DPI module ///////////////////////////////////////////
				mp = Map();
				mp.put("Organization_Name",Organization_Name);
				mp.put("Owner",Project_owner);
				mp.put("Name",invoice_Number);
				mp.put("Project",Project_id);
				mp.put("Contact",contact_id);
				mp.put("Customer",customer_id);
				mp.put("Down_Payment_Amount",invoice_total);
				mp.put("Retainer_Invoice_ID",Retainer_Invoice_ID);
				mp.put("Invoice_Date",invoice_Date);
				mp.put("Invoice_URL",invoice_url);
				mp.put("Contact_First_Name",contact_Fname);
				mp.put("Contact_Last_Name",contact_Lname);
				mp.put("Subject",subject_Data);
				mp.put("Email",contact_email);
				mp.put("Paid","Active");
				mp.put("Currency",Currency);
				//mp.put("Retainer_Invoice_Generated",true);
				Update_dpi = zoho.crm.updateRecord("Down_Payment_Invoices",ri_id,mp,{"trigger":{"workflow"}});
				dpi_id = Update_dpi.get("id");
				//----------------------------
				// Uploading attachment in the DPI module entry
				attach_dpi_pd = zoho.crm.attachFile("Down_Payment_Invoices",dpi_id,invoice_file);
				openurl("https://crm.zoho.com/crm/org666155072/tab/CustomModule41/" + ri_id,"parent window");
				MessInfo = "Retainer Invoice has been updated";
			}
			else
			{
				MessInfo = "Your Total Retainer Amounts exceed the SO Total";
			}
		}
	}
}
catch (e)
{
	sendmail
	[
		from :zoho.adminuserid
		to :"erp@blinksigns.com"
		subject :"Update Retainer / Retainer Invoices / CRM / Button"
		message :"ID: " + ri_id + " Root Cause: " + e + " Retainer Invoice Response: " + retainer_invoice_resp
	]
}
return MessInfo;