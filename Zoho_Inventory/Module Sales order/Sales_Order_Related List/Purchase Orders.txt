
headerData = List();
listData = List();
headerData.add({"key":"product_name","value":"Product"});
headerData.add({"key":"vendor","value":"vendor"});
headerData.add({"key":"purchaseorder_number","value":"Purchase Order"});
headerData.add({"key":"cost","value":"Cost"});
headerData.add({"key":"qty","value":"QTY"});
// headerData.add({"key":"amount","value":"Amount"});
headerData.add({"key":"po_due_date","value":"PO Due Date"});
headerData.add({"key":"item_due_date","value":"Item Due Date"});
headerData.add({"key":"status","value":"Status"});
salesorder_number = salesorder.get("salesorder_number");
response = zoho.books.getRecords("purchaseorders",organization.get("organization_id"),"reference_number=" + salesorder_number,"zoho_book");
purchaseorders = response.getJSON("purchaseorders");
purchaseorders = purchaseorders.toJSONList();
for each  purchaseorder in purchaseorders
{
	po = zoho.books.getRecordsByID("purchaseorders","666479573",purchaseorder.getJSON("purchaseorder_id"),"zoho_book");
	status = po.get("purchaseorder").get("custom_field_hash").get("cf_status");
	po = po.getJSON("purchaseorder");
	line_items = po.getJSON("line_items");
	for each  line_item in line_items
	{
		details = Map();
		details.put("product_name",line_item.getJSON("name"));
		details.put("vendor",po.getJSON("vendor_name"));
		details.put("purchaseorder_number",po.getJSON("purchaseorder_number"));
		details.put("purchaseorder_number",{"value":po.getJSON("purchaseorder_number"),"link":"https://books.zoho.com/app#/purchaseorders/" + po.getJSON("purchaseorder_id")});
		details.put("cost",line_item.getJSON("rate"));
		details.put("qty",line_item.getJSON("quantity"));
		// 		details.put("amount",line_item.getJSON("rate"));
		details.put("po_due_date",po.getJSON("delivery_date"));
		details.put("status",status);
		cfs = line_item.get("item_custom_fields").toList();
		for each  cf in cfs
		{
			if(cf.get("label").toString().equalsIgnoreCase("Item Due Date"))
			{
				/*replace with item level custom field name*/
				details.put("item_due_date",cf.getJSON("value"));
				break;
			}
			else
			{
				details.put("item_due_date","");
			}
		}
		listData.add(details);
	}
}
resultMap = Map();
resultMap.put("header_context",headerData);
resultMap.put("data",listData);
return resultMap;
