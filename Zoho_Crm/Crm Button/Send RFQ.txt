try 
{
	rfq = zoho.crm.getRecordById("Requests_for_quote",rfqid.toLong());
	Site_survey = rfq.get("Site_Survey");
	dealid = ifnull(rfq.get("Project"),"").get("id");
	designid = ifnull(rfq.get("Design"),"").get("id");
	Email_temp = ifnull(rfq.get("Email_Template"),"").get("id");
	dealDetails = zoho.crm.getRecordById("Deals",dealid.toLong());
	Design_Work_Att1 = List();
	/////////////// Send Site Survey RFQ //////////////////////////////////////
	if(Email_temp == "3205780000021547095")
	{
		//*******************************************************************************************//
		projectname = dealDetails.get("Deal_Name");
		//////////////////////////// Get City and Zip Codes /////////////////////////////////////////
		servicelocation_id = dealDetails.get("Service_Locations").get("id");
		Serv_loc_obj = zoho.crm.getRecordById("Service_Locations",servicelocation_id);
		City_State_Zip = Serv_loc_obj.get("City_State_Zip").get("id");
		Cities_Zip_Code = zoho.crm.getRecordById("Cities_and_Zip_Codes",Serv_loc_obj.get("City_State_Zip").get("id"));
		City_Zip = Cities_Zip_Code.get("City") + ", " + Cities_Zip_Code.get("State");
		////////////////////////////////////////////////////////////////////////////////////////
		signageneeds = dealDetails.get("Signage_Needs");
		projectId = dealDetails.get("id");
		//*******************************************************************************************//
		rfq = zoho.crm.getRecordById("Requests_for_quote",rfqid.toLong());
		rfqname = ifnull(rfq.get("Name"),"");
		service_info = rfq.get("Work_Details");
		service_obj = service_info.toMap();
		for each  service in service_obj
		{
			service_name = service_obj.get("Service").get("name");
			service_description = service_obj.get("Service_Description");
			service_dateandtime_neededby = service_obj.get("Date_Time_Needed_By");
			service_notes = service_obj.get("Notes1");
			Budget = service_obj.get("Budget");
		}
		projectDetails = zoho.crm.getRecordById("Deals",projectId);
		projectID = projectDetails.get("Project_ID");
		vendorIdList = List();
		vendorSubform = ifnull(rfq.get("Vendor_Lookup"),"");
		for each  ele in vendorSubform
		{
			//vendorInfo = zoho.crm.getRecordById("Vendors",ele.get("Vendor").get("id"));
			//if(vendorInfo.get("Vendor_Status") != "Blacklisted")
			//{
			vendorIdList.add(ele);
			//}
		}
		///////////////////////////////////Store Images Files ////////////////////////////////////////////
		//*******************************************************************************************//
		if(rfq.get("Add_Storefront_Images") == true && dealDetails.get("Design") != {})
		{
			Store_images_list = dealDetails.get("Design").toList();
			info Store_images_list;
			for each index k in Store_images_list
			{
				mapvar3 = Store_images_list.get(k);
				finalMap3 = mapvar3.toMap();
				if(finalMap3.containKey("file_Id") == false)
				{
					Design_Work_Att1.add(finalMap3.get("preview_Url") + "#" + finalMap3.get("file_Name"));
				}
				else
				{
					attachementId1 = Store_images_list.get(k).get("attachment_Id");
					downloadFile = invokeurl
					[
						url :"https://www.zohoapis.com/crm/v2/Deals/" + dealid + "/Attachments/" + attachementId1
						type :GET
						connection:"attachfile"
					];
					if(k == 0)
					{
						Store_Images_Att1 = downloadFile;
					}
					if(k == 1)
					{
						Store_Images_Att2 = downloadFile;
					}
					if(k == 2)
					{
						Store_Images_Att3 = downloadFile;
					}
					if(k == 3)
					{
						Store_Images_Att4 = downloadFile;
					}
					if(k == 4)
					{
						Store_Images_Att5 = downloadFile;
					}
				}
			}
		}
		info Store_Images_Att1;
		info Store_Images_Att2;
		info Store_Images_Att3;
		info Store_Images_Att4;
		info Store_Images_Att5;
		//------------------------------------ Ends ---------------------------------------------------//
		////////////////////////////// Other Files ////////////////////////////////////////////////
		Other_files_list = List();
		Other_files_links = List();
		if(rfq.get("Attach_Files") != {})
		{
			Attachements_Files = "";
			Other_files_list.addAll(rfq.get("Attach_Files"));
		}
		for each index k in Other_files_list
		{
			mapvar3 = Other_files_list.get(k);
			finalMap3 = mapvar3.toMap();
			if(finalMap3.containKey("file_Id") == false)
			{
				Design_Work_Att1.add(finalMap3.get("preview_Url") + "#" + finalMap3.get("file_Name"));
			}
			else
			{
				downloadFile6 = invokeurl
				[
					url :"https://www.zohoapis.com/crm/v2/Requests_for_quote/" + rfqid + "/Attachments/" + finalMap3.get("attachment_Id")
					type :GET
					connection:"attachfile"
				];
				if(k == 0)
				{
					Other_files_Att1 = downloadFile6;
				}
				if(k == 1)
				{
					Other_files_Att2 = downloadFile6;
				}
				if(k == 2)
				{
					Other_files_Att3 = downloadFile6;
				}
				if(k == 3)
				{
					Other_files_Att4 = downloadFile6;
				}
				if(k == 4)
				{
					Other_files_Att5 = downloadFile6;
				}
			}
		}
		info Other_files_Att1;
		info Other_files_Att2;
		info Other_files_Att3;
		info Other_files_Att4;
		info Other_files_Att5;
		////////////////////////////////// Email Body ///////////////////////////////////////////////
		Email_Temp_details = zoho.crm.getRecordById("Email_Templates",Email_temp);
		Email_Body = Email_Temp_details.get("Email_Body");
		///////////////////////////////////////////////////////////////////////////////////////////////
		//---------------------------------------------------------------------------------------//
		for each  vendor in vendorIdList
		{
			Other_Emails = List();
			vendorEmail = vendor.get("Vendor_Email");
			vendorName = vendor.get("Vendor").get("name");
			Vendor_ID = vendor.get("Vendor").get("id");
			CC_email = vendor.get("CC_Email_Addresses");
			Vendor_Contacts = vendor.get("Other_Email_Addresses");
			if(Vendor_Contacts != null)
			{
				Contacts = Vendor_Contacts.replaceAll("\n",",");
				for each  data in Contacts
				{
					if(data.contains("Email"))
					{
						Other_Emails.add(data.getSuffix(":"));
					}
				}
			}
			//-------------------------------------------------------------------------------------//
			fileupload = ifnull(dealDetails.get("Design"),"");
			if(fileupload.size() == null || fileupload.size() != null && rfq.get("Add_Storefront_Images") == true)
			{
				/////////////////////////////////////////////////////////////////////////////////////////
				str = "<table align='center' cellpadding='10' width='600' style='width:600px;max-width:600px; margin:auto'><tr><td><div><span style='color: rgb(35, 37, 40);'>Dear " + vendorName + ",</span></div><div><span style='color: rgb(35, 37, 40);'><br></span></div><div><span style='color: rgb(35, 37, 40);'>" + Email_Body + "</span></div><div><span style='color: rgb(35, 37, 40);'><br/><span style='color: rgb(255, 0, 0);'><b>Please do not proceed with the survey without a purchase order.</span></div><br><div><span style='color: rgb(35, 37, 40);'>City, State of Location : " + City_Zip + ".</span></div><br><div><span style='color: rgb(35, 37, 40);'>Site Survey Scope Document: &nbsp;<a href='https://zdrive.li/9YA' target='_blank' style='color: rgb(17, 85, 204);'>SS Scope Document Link</a></span></div></td></tr></table>";
				/////////////////////////////////////////////////////////////////////////////////////////////
				str = str + "<br><table  align='center' cellpadding='10' width='600' style='width:600px;max-width:600px; margin:auto' style='font-family: Arial, Helvetica,sans-serif; font-size:12px; color:#000; border-collapse:collapse;'><tr></td><td width='150' style='width:150px; max-width:150px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Service</td><td width='250' style='width:250px; max-width:250px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Description</td><td width='250' style='width:250px; max-width:250px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Budget</td><td  width='100' style='width:100px; max-width:100px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Date & Time Needed By</td><td  width='100' style='width:100px; max-width:100px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Notes</td>";
				//////////////////////////// Ends /////////////////////////////////////
				rfq = zoho.crm.getRecordById("Requests_for_quote",rfqid.toLong());
				work_detial = rfq.get("Work_Details");
				jlist = work_detial.toJSONList();
				for each index j in jlist
				{
					mapvar = jlist.get(j);
					finalMap = mapvar.toMap();
					service_name = finalMap.get("Service").get("name");
					service_desc = finalMap.get("Service_Description");
					Budget = finalMap.get("Budget");
					DateTime_Neededby = finalMap.get("Date_Time_Needed_By");
					////////////////////////////////////////////////////////////////////////////////////
					time1 = DateTime_Neededby.toTime("yyyy-MM-dd'T'HH:mm:ss").toString("yyyy-MM-dd'T'hh:mm:ss+05:00").toTime("yyyy-MM-dd'T'hh:mm:ss");
					timevalue = DateTime_Neededby.toTime("yyyy-MM-dd'T'HH:mm:ss").getTime();
					newtime = time1 + " " + timevalue.toString().getSuffix(" ");
					/////////////////////////////////////////////////////////////////////////////
					work_details_Notes = ifnull(finalMap.get("Notes1"),"");
					str = str + "<tr>";
					str = str + "<td width='150' style='width:150px; max-width:150px; border-bottom:2px solid #dadada'>" + service_name + "</td>";
					str = str + "<td width='250' style='width:250px; max-width:250px; border-bottom:2px solid #dadada'>" + service_desc + "</td>";
					str = str + "<td width='250' style='width:250px; max-width:250px; border-bottom:2px solid #dadada'>$ " + Budget + "</td>";
					str = str + "<td width='100' style='width:100px; max-width:100px; border-bottom:2px solid #dadada'>" + newtime + "</td>";
					str = str + "<td width='100' style='width:100px; max-width:100px; border-bottom:2px solid #dadada' >" + work_details_Notes + "</td>";
					str = str + "</tr>";
				}
				str = str + "<tr><td colspan='6'><br/>By pressing the “Yes” button below, you have accepted that if you are the chosen vendor, you will be able to complete the job within time and budget defined above.</td></tr><tr><td colspan='6'><a href='https://creator.zohopublic.com/blinksigns/vendor-quotes/form-perma/Accept_Site_Survey/mwTBx3ZG4huj7O83kfsDZjRfaYk4h78NE1RU3G6yzAQZPzNKBuSaBmpRzJju57X7NDUeSvSCHPHNBJqpfOApQwkEKN63aqp5F98E?RFQ_ID=" + rfqid + "&Vendor_ID=" + Vendor_ID + "'; style='-webkit-box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; -moz-box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; color:#FFFF; background: #4CAF50; border-radius:5px;text-decoration: none; -moz-border-radius:5px; -webkit-border-radius:5px; border:none; font-size:14px; font-weight:700; padding:4px 26px; text-shadow:rgb(255, 238, 102) 0px 1px 0px; background-color: rgb(128, 128, 128);'>Yes</a><br><br>Do not proceed with the job. If you are the selected vendor, you will receive a purchase order. If you have any questions, reply to this email.</td></tr><tr><td colspan='4' style='padding-top:0px;padding-bottom:0px;'>Thank You,</td></tr><tr><td colspan='4'  style='padding-top:0px;padding-bottom:0px;'>Blink Signs Team</td></tr></table>";
				//////////////////////////////////////////////////////////////////////////////////////////////////		
				if(Design_Work_Att1 != {})
				{
					str = str + "<br><br><b>Attachment Files: </b><br><br>";
				}
				for each  links in Design_Work_Att1
				{
					prefix = links.getPrefix("#");
					Postfix = links.getSuffix("#");
					str = str + "File link: <a href='" + prefix + "'>" + Postfix + "</a><br>";
				}
				/////////////////////////////////////////////////////////////////////////////////////////////
				sendmail
				[
					from :zoho.loginuserid
					to :vendorEmail,Other_Emails
					cc:CC_email
					subject :"Blink Signs Request for Quote -RFQ"
					message :str
					content type :HTML
					Attachments :file:Store_Images_Att1,file:Store_Images_Att2,file:Store_Images_Att3,file:Store_Images_Att4,file:Store_Images_Att5,file:Other_files_Att1,file:Other_files_Att2,file:Other_files_Att3,file:Other_files_Att4,file:Other_files_Att5
				]
			}
			//-------------------------------------------------------------------------------------//
			else if(fileupload.size() == null || fileupload.size() != null && rfq.get("Add_Storefront_Images") == false)
			{
				/////////////////////////////////////////////////////////////////////////////////////////
				str = "<table align='center' cellpadding='10' width='600' style='width:600px;max-width:600px; margin:auto'><tr><td><div><span style='color: rgb(35, 37, 40);'>Dear " + vendorName + ",</span></div><div><span style='color: rgb(35, 37, 40);'><br></span></div><div><span style='color: rgb(35, 37, 40);'>" + Email_Body + "</span></div><div><span style='color: rgb(35, 37, 40);'><br/><span style='color: rgb(255, 0, 0);'><b>Please do not proceed with the survey without a purchase order.</span></div><br><div><span style='color: rgb(35, 37, 40);'>City, State of Location : " + City_Zip + ".</span></div><br><div><span style='color: rgb(35, 37, 40);'>Site Survey Scope Document: &nbsp;<a href='https://zdrive.li/9YA' target='_blank' style='color: rgb(17, 85, 204);'>SS Scope Document Link</a></span></div></td></tr></table>";
				/////////////////////////////////////////////////////////////////////////////////////////////
				str = str + "<br><table  align='center' cellpadding='10' width='600' style='width:600px;max-width:600px; margin:auto' style='font-family: Arial, Helvetica,sans-serif; font-size:12px; color:#000; border-collapse:collapse;'><tr></td><td width='150' style='width:150px; max-width:150px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Service</td><td width='250' style='width:250px; max-width:250px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Description</td><td width='250' style='width:250px; max-width:250px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Budget</td><td  width='100' style='width:100px; max-width:100px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Date & Time Needed By</td><td  width='100' style='width:100px; max-width:100px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Notes</td>";
				//////////////////////////// Ends /////////////////////////////////////
				rfq = zoho.crm.getRecordById("Requests_for_quote",rfqid.toLong());
				work_detial = rfq.get("Work_Details");
				jlist = work_detial.toJSONList();
				for each index j in jlist
				{
					mapvar = jlist.get(j);
					finalMap = mapvar.toMap();
					service_name = finalMap.get("Service").get("name");
					service_desc = finalMap.get("Service_Description");
					Budget = finalMap.get("Budget");
					DateTime_Neededby = finalMap.get("Date_Time_Needed_By");
					////////////////////////////////////////////////////////////////////////////////////
					time1 = DateTime_Neededby.toTime("yyyy-MM-dd'T'HH:mm:ss").toString("yyyy-MM-dd'T'hh:mm:ss+05:00").toTime("yyyy-MM-dd'T'hh:mm:ss");
					timevalue = DateTime_Neededby.toTime("yyyy-MM-dd'T'HH:mm:ss").getTime();
					newtime = time1 + " " + timevalue.toString().getSuffix(" ");
					/////////////////////////////////////////////////////////////////////////////
					work_details_Notes = ifnull(finalMap.get("Notes1"),"");
					str = str + "<tr>";
					str = str + "<td width='150' style='width:150px; max-width:150px; border-bottom:2px solid #dadada'>" + service_name + "</td>";
					str = str + "<td width='250' style='width:250px; max-width:250px; border-bottom:2px solid #dadada'>" + service_desc + "</td>";
					str = str + "<td width='250' style='width:250px; max-width:250px; border-bottom:2px solid #dadada'>$ " + Budget + "</td>";
					str = str + "<td width='100' style='width:100px; max-width:100px; border-bottom:2px solid #dadada'>" + newtime + "</td>";
					str = str + "<td width='100' style='width:100px; max-width:100px; border-bottom:2px solid #dadada' >" + work_details_Notes + "</td>";
					str = str + "</tr>";
				}
				str = str + "<tr><td colspan='6'><br/>By pressing the “Yes” button below, you have accepted that if you are the chosen vendor, you will be able to complete the job within time and budget defined above.</td></tr><tr><td colspan='6'><a href='https://creator.zohopublic.com/blinksigns/vendor-quotes/form-perma/Accept_Site_Survey/mwTBx3ZG4huj7O83kfsDZjRfaYk4h78NE1RU3G6yzAQZPzNKBuSaBmpRzJju57X7NDUeSvSCHPHNBJqpfOApQwkEKN63aqp5F98E?RFQ_ID=" + rfqid + "&Vendor_ID=" + Vendor_ID + "'; style='-webkit-box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; -moz-box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; color:#FFFF; background: #4CAF50; border-radius:5px;text-decoration: none; -moz-border-radius:5px; -webkit-border-radius:5px; border:none; font-size:14px; font-weight:700; padding:4px 26px; text-shadow:rgb(255, 238, 102) 0px 1px 0px; background-color: rgb(128, 128, 128);'>Yes</a><br><br>Do not proceed with the job. If you are the selected vendor, you will receive a purchase order. If you have any questions, reply to this email.</td></tr><tr><td colspan='4' style='padding-top:0px;padding-bottom:0px;'>Thank You,</td></tr><tr><td colspan='4'  style='padding-top:0px;padding-bottom:0px;'>Blink Signs Team</td></tr></table>";
				/////////////////////////////////////////////////////////////////////////////////////////////
				sendmail
				[
					from :zoho.loginuserid
					to :vendorEmail,Other_Emails
					cc:CC_email
					subject :"Blink Signs Request for Quote -RFQ"
					message :str
					content type :HTML
				]
			}
		}
		//////////////////////// Update RFQ Status //////////////////////
		mp_rfq = Map();
		mp_rfq.put("RFQ_Status","Sent");
		update = zoho.crm.updateRecord("Requests_for_quote",rfqid.toLong(),mp_rfq);
		message_out = "RFQ Sent";
	}
	///////////////////////////////////////////////////////////////////////////////////////
	else if(Email_temp == "3205780000021547222")
	{
		designDetails = zoho.crm.getRecordById("Designs",designid);
		designname = designDetails.get("Name");
		//signageneeds = designDetails.get("Signage_Needs");
		//-------------------------------------------------------------
		// RFQ Details
		rfq = zoho.crm.getRecordById("Requests_for_quote",rfqid.toLong());
		rfqname = ifnull(rfq.get("Name"),"");
		//--------------------------------------------------------
		// Project Details
		projectId = ifnull(rfq.get("Project"),"").get("id").toLong();
		projectname = ifnull(rfq.get("Project"),"").get("name");
		projectDetails = zoho.crm.getRecordById("Deals",projectId);
		projectID = projectDetails.get("Project_ID");
		servicelocation = projectDetails.get("Service_Locations").get("name");
		Organization = projectDetails.get("Organization_Name");
		//-------------------------------------------------------
		// Vendor List from RFQ
		vendorIdList = List();
		vendorSubform = ifnull(rfq.get("Vendor_Lookup"),"");
		for each  ele in vendorSubform
		{
			vendorIdList.add(ele);
		}
		Attachment_id = "";
		Attachements_Files = "";
		attachements = List();
		Design_Attachment = List();
		if(rfq.get("Add_Design_Files") == true)
		{
			if(designDetails.get("Design") != null)
			{
				Attachements_Files = "";
				Design_obj = zoho.crm.getRecordById("Designs",designid);
				Design_Name = ifnull(Design_obj.get("Name"),"");
				Design_Attachment.addAll(Design_obj.get("Design"));
			}
			for each index i in Design_Attachment
			{
				mapvar2 = Design_Attachment.get(i);
				finalMap2 = mapvar2.toMap();
				if(finalMap2.containKey("file_Id") == false)
				{
					Design_Work_Att1.add(finalMap2.get("preview_Url") + "#" + finalMap2.get("file_Name"));
				}
				else
				{
					downloadFile2 = invokeurl
					[
						url :"https://www.zohoapis.com/crm/v2/Designs/" + designid + "/Attachments/" + finalMap2.get("attachment_Id")
						type :GET
						connection:"attachfile"
					];
					if(i == 0)
					{
						Design_Att1 = downloadFile2;
					}
					if(i == 1)
					{
						Design_Att2 = downloadFile2;
					}
					if(i == 2)
					{
						Design_Att3 = downloadFile2;
					}
					if(i == 3)
					{
						Design_Att4 = downloadFile2;
					}
					if(i == 4)
					{
						Design_Att5 = downloadFile2;
					}
				}
			}
		}
		info Design_Att1;
		info Design_Att2;
		info Design_Att3;
		info Design_Att4;
		info Design_Att5;
		////////////////////////////////////////////// Ends /////////////////////////////////////////////////
		//*****************************************************************************************************
		////////////////////////////// Other Files ////////////////////////////////////////////////
		Other_files_list = List();
		Other_files_links = List();
		if(rfq.get("Attach_Files") != {})
		{
			Attachements_Files = "";
			Other_files_list.addAll(rfq.get("Attach_Files"));
		}
		for each index k in Other_files_list
		{
			mapvar3 = Other_files_list.get(k);
			finalMap3 = mapvar3.toMap();
			if(finalMap3.containKey("file_Id") == false)
			{
				Design_Work_Att1.add(finalMap3.get("preview_Url") + "#" + finalMap3.get("file_Name"));
			}
			else
			{
				downloadFile6 = invokeurl
				[
					url :"https://www.zohoapis.com/crm/v2/Requests_for_quote/" + rfqid + "/Attachments/" + finalMap3.get("attachment_Id")
					type :GET
					connection:"attachfile"
				];
				if(k == 0)
				{
					Other_files_Att1 = downloadFile6;
				}
				if(k == 1)
				{
					Other_files_Att2 = downloadFile6;
				}
				if(k == 2)
				{
					Other_files_Att3 = downloadFile6;
				}
				if(k == 3)
				{
					Other_files_Att4 = downloadFile6;
				}
				if(k == 4)
				{
					Other_files_Att5 = downloadFile6;
				}
			}
		}
		info Other_files_Att1;
		info Other_files_Att2;
		info Other_files_Att3;
		info Other_files_Att4;
		info Other_files_Att5;
		////////////////////////////////////////////  Ends ///////////////////////////////////////////////////
		if(rfq.get("Add_Manufacturing_Files") == true)
		{
			Manuf_files_1 = ifnull(designDetails.get("Manufacturing_Files_1"),"");
			attachements.addAll(Manuf_files_1);
			Manuf_files_2 = ifnull(designDetails.get("Manufacturing_Files_2"),"");
			attachements.addAll(Manuf_files_2);
		}
		for each index j in attachements
		{
			mapvar = attachements.get(j);
			finalMap = mapvar.toMap();
			if(finalMap.containKey("file_Id") == false)
			{
				Design_Work_Att1.add(finalMap.get("preview_Url") + "#" + finalMap.get("file_Name"));
			}
			else
			{
				downloadFile = invokeurl
				[
					url :"https://www.zohoapis.com/crm/v2/Designs/" + designid + "/Attachments/" + finalMap.get("attachment_Id")
					type :GET
					connection:"attachfile"
				];
				if(j == 0)
				{
					Att1 = downloadFile;
				}
				if(j == 1)
				{
					Att2 = downloadFile;
				}
				if(j == 2)
				{
					Att3 = downloadFile;
				}
				if(j == 3)
				{
					Att4 = downloadFile;
				}
				if(j == 4)
				{
					Att5 = downloadFile;
				}
				if(j == 5)
				{
					Att6 = downloadFile;
				}
				if(j == 6)
				{
					Att7 = downloadFile;
				}
				if(j == 7)
				{
					Att8 = downloadFile;
				}
				if(j == 8)
				{
					Att9 = downloadFile;
				}
				if(j == 9)
				{
					Att10 = downloadFile;
				}
				if(j == 10)
				{
					Att11 = downloadFile;
				}
			}
		}
		info Att1;
		info Att2;
		info Att3;
		info Att4;
		info Att5;
		info Att6;
		info Att7;
		info Att8;
		info Att9;
		info Att10;
		info Att11;
		/////////////////////////////////Get WorkDetails Service Name //////////////////////////////////
		work_detial = rfq.get("Work_Details");
		jlist = work_detial.toJSONList();
		for each index j in jlist
		{
			if(j == 0)
			{
				mapvar = jlist.get(0);
				finalMap = mapvar.toMap();
				service_name_1 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "1";
			}
			else if(j == 1)
			{
				mapvar = jlist.get(1);
				finalMap = mapvar.toMap();
				service_name_2 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "2";
			}
			else if(j == 2)
			{
				mapvar = jlist.get(2);
				finalMap = mapvar.toMap();
				service_name_3 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "3";
			}
			else if(j == 3)
			{
				mapvar = jlist.get(3);
				finalMap = mapvar.toMap();
				service_name_4 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "4";
			}
			else if(j == 4)
			{
				mapvar = jlist.get(4);
				finalMap = mapvar.toMap();
				service_name_5 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "5";
			}
		}
		////////////////////////////////// Email Body ///////////////////////////////////////////////
		Email_Temp_details = zoho.crm.getRecordById("Email_Templates",Email_temp);
		Email_Body = Email_Temp_details.get("Email_Body");
		//----------------------------------------------------------
		// Get all Vendors and there Emails to send email
		for each  vendor in vendorIdList
		{
			Other_Emails = List();
			vendorEmail = vendor.get("Vendor_Email");
			vendorName = vendor.get("Vendor").get("name");
			vendor_ID = vendor.get("Vendor").get("id");
			CC_email = vendor.get("CC_Email_Addresses");
			Vendor_Contacts = vendor.get("Other_Email_Addresses");
			if(Vendor_Contacts != null)
			{
				Contacts = Vendor_Contacts.replaceAll("\n",",");
				for each  data in Contacts
				{
					if(data.contains("Email"))
					{
						Other_Emails.add(data.getSuffix(":"));
					}
				}
			}
			/////////////////////////////////////////////////////////////////////////////////////////
			str = "<table align='center' cellpadding='10' width='600' style='width:600px;max-width:600px; margin:auto'><tr><td><div><span style='color: rgb(35, 37, 40);'>Dear " + vendorName + ",</span></div><div><span style='color: rgb(35, 37, 40);'><br></span></div><div><span style='color: rgb(35, 37, 40);'>" + Email_Body + "</span></div><br><div><span style='color: rgb(35, 37, 40);'>Service Location : " + servicelocation + ".</span></div></td></tr></table>";
			/////////////////////////////////////////////////////////////////////////////////////////////
			str = str + "<br><table  align='center' cellpadding='10' width='600' style='width:600px;max-width:600px; margin:auto' style='font-family: Arial, Helvetica,sans-serif; font-size:12px; color:#000; border-collapse:collapse;'><tr></td><td width='150' style='width:150px; max-width:150px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Service</td><td width='250' style='width:250px; max-width:250px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Description</td><td  width='100' style='width:100px; max-width:100px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Date & Time Needed By</td><td  width='100' style='width:100px; max-width:100px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Notes</td>";
			//////////////////////////// Ends /////////////////////////////////////
			//----------------------------------------------------------
			// Work Details from RFQ to create Email body
			for each index j in jlist
			{
				mapvar = jlist.get(j);
				finalMap = mapvar.toMap();
				service_name = finalMap.get("Service").get("name");
				service_desc = finalMap.get("Service_Description");
				DateTime_Neededby = finalMap.get("Date_Time_Needed_By");
				////////////////////////////////////////////////////////////////////////////////////
				time1 = DateTime_Neededby.toTime("yyyy-MM-dd'T'HH:mm:ss").toString("yyyy-MM-dd'T'hh:mm:ss+05:00").toTime("yyyy-MM-dd'T'hh:mm:ss");
				timevalue = DateTime_Neededby.toTime("yyyy-MM-dd'T'HH:mm:ss").getTime();
				newtime = time1 + " " + timevalue.toString().getSuffix(" ");
				/////////////////////////////////////////////////////////////////////////////
				work_details_Notes = finalMap.get("Notes1");
				str = str + "<tr>";
				str = str + "<td width='150' style='width:150px; max-width:150px; border-bottom:2px solid #dadada'>" + service_name + "</td>";
				str = str + "<td width='250' style='width:250px; max-width:250px; border-bottom:2px solid #dadada'>" + service_desc + "</td>";
				str = str + "<td width='100' style='width:100px; max-width:100px; border-bottom:2px solid #dadada'>" + newtime + "</td>";
				str = str + "<td width='100' style='width:100px; max-width:100px; border-bottom:2px solid #dadada' >" + work_details_Notes + "</td>";
				str = str + "</tr>";
			}
			str = str + "<tr><td colspan='4'><br/>Please provide your quote below:</td></tr><tr><td colspan='4'><a href='https://creator.zohopublic.com/blinksigns/vendor-quotes/form-perma/Vendor_Proposal/EyX5htdueBaTH3VpCtJvgAk8H7RMZ62F95BjOrdr9rnvU9T6mGEY3rVZBa1yXSHymej3bEY32gBnAAbYSNv7XJHewpKqvptbXJm6?RFQ_ID=" + rfqid + "&Vendor_ID=" + vendor_ID + "'; style='-webkit-box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; -moz-box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; color:#FFFF; background: #4CAF50; border-radius:5px; -moz-border-radius:5px; -webkit-border-radius:5px; border:none; font-size:14px; font-weight:700; padding:4px 26px; text-shadow:rgb(255, 238, 102) 0px 1px 0px; background-color: rgb(128, 128, 128);'>Submit The Quote</a></td></tr><tr><td colspan='4' style='padding-top:0px;padding-bottom:0px;'>Thank You</td></tr><tr><td colspan='4'  style='padding-top:0px;padding-bottom:0px;'>BlinkSigns Team</td></tr></table>";
			if(Design_Work_Att1 != {})
			{
				str = str + "<br><br><b>Attachment Files: </b><br><br>";
			}
			for each  attachments in Design_Work_Att1
			{
				prefix = attachments.getPrefix("#");
				Postfix = attachments.getSuffix("#");
				str = str + "File link: <a href='" + prefix + "'>" + Postfix + "</a><br>";
			}
			/////////////////////////////////////////////////////////////////////////////////////////////
			sendmail
			[
				from :zoho.loginuserid
				to :vendorEmail,Other_Emails
				cc:CC_email
				subject :"Blink Signs Request for Quote -RFQ"
				message :str
				content type :HTML
				Attachments :file:Design_Att1,file:Design_Att2,file:Design_Att3,file:Design_Att4,file:Design_Att5,file:Att1,file:Att2,file:Att3,file:Att4,file:Att5,file:Att6,file:Att7,file:Att8,file:Att9,file:Att10,file:Att11,file:Other_files_Att1,file:Other_files_Att2,file:Other_files_Att3,file:Other_files_Att4,file:Other_files_Att5
			]
		}
		//////////////////////// Update RFQ Status //////////////////////
		mp_rfq = Map();
		mp_rfq.put("RFQ_Status","Sent");
		update = zoho.crm.updateRecord("Requests_for_quote",rfqid.toLong(),mp_rfq);
		message_out = "RFQ Sent";
	}
	/////////////////////////  Default Site Survey without Design /////////////////////////////////
	else if(Email_temp == "3205780000022078883")
	{
		designname = "";
		/////-------------------------------------------------------------
		///// RFQ Details
		rfq = zoho.crm.getRecordById("Requests_for_quote",rfqid.toLong());
		rfqname = ifnull(rfq.get("Name"),"");
		//--------------------------------------------------------
		// Project Details
		projectId = ifnull(rfq.get("Project"),"").get("id").toLong();
		projectname = ifnull(rfq.get("Project"),"").get("name");
		projectDetails = zoho.crm.getRecordById("Deals",projectId);
		projectID = projectDetails.get("Project_ID");
		servicelocation = projectDetails.get("Service_Locations").get("name");
		Organization = projectDetails.get("Organization_Name");
		//-------------------------------------------------------
		// Vendor List from RFQ
		vendorIdList = List();
		vendorSubform = ifnull(rfq.get("Vendor_Lookup"),"");
		for each  ele in vendorSubform
		{
			vendorIdList.add(ele);
		}
		Attachment_id = "";
		Attachements_Files = "";
		Design_Attachment = List();
		Design_Work_Att1 = List();
		//*****************************************************************************************************
		//////////////////////////////Store Images Files ////////////////////////////////////////////
		//*******************************************************************************************//
		if(rfq.get("Add_Storefront_Images") == true && dealDetails.get("Design") != {})
		{
			Store_images_list = dealDetails.get("Design").toList();
			for each index k in Store_images_list
			{
				mapvar3 = Store_images_list.get(k);
				finalMap3 = mapvar3.toMap();
				if(finalMap3.containKey("file_Id") == false)
				{
					Design_Work_Att1.add(finalMap3.get("preview_Url") + "#" + finalMap3.get("file_Name"));
				}
				else
				{
					attachementId1 = Store_images_list.get(k).get("attachment_Id");
					downloadFile = invokeurl
					[
						url :"https://www.zohoapis.com/crm/v2/Deals/" + dealid + "/Attachments/" + attachementId1
						type :GET
						connection:"attachfile"
					];
					if(k == 0)
					{
						Store_Images_Att1 = downloadFile;
					}
					if(k == 1)
					{
						Store_Images_Att2 = downloadFile;
					}
					if(k == 2)
					{
						Store_Images_Att3 = downloadFile;
					}
					if(k == 3)
					{
						Store_Images_Att4 = downloadFile;
					}
					if(k == 4)
					{
						Store_Images_Att5 = downloadFile;
					}
				}
			}
		}
		info Store_Images_Att1;
		info Store_Images_Att2;
		info Store_Images_Att3;
		info Store_Images_Att4;
		info Store_Images_Att5;
		//------------------------------------ Ends ---------------------------------------------------//
		////////////////////////////// Other Files ////////////////////////////////////////////////
		Other_files_list = List();
		Other_files_links = List();
		if(rfq.get("Attach_Files") != {})
		{
			Attachements_Files = "";
			Other_files_list.addAll(rfq.get("Attach_Files"));
		}
		for each index k in Other_files_list
		{
			mapvar3 = Other_files_list.get(k);
			finalMap3 = mapvar3.toMap();
			if(finalMap3.containKey("file_Id") == false)
			{
				Design_Work_Att1.add(finalMap3.get("preview_Url") + "#" + finalMap3.get("file_Name"));
			}
			else
			{
				downloadFile6 = invokeurl
				[
					url :"https://www.zohoapis.com/crm/v2/Requests_for_quote/" + rfqid + "/Attachments/" + finalMap3.get("attachment_Id")
					type :GET
					connection:"attachfile"
				];
				if(k == 0)
				{
					Other_files_Att1 = downloadFile6;
				}
				if(k == 1)
				{
					Other_files_Att2 = downloadFile6;
				}
				if(k == 2)
				{
					Other_files_Att3 = downloadFile6;
				}
				if(k == 3)
				{
					Other_files_Att4 = downloadFile6;
				}
				if(k == 4)
				{
					Other_files_Att5 = downloadFile6;
				}
			}
		}
		info Other_files_Att1;
		info Other_files_Att2;
		info Other_files_Att3;
		info Other_files_Att4;
		info Other_files_Att5;
		////////////////////////////////////////////  Ends ///////////////////////////////////////////////////
		/////////////////////////////////Get WorkDetails Service Name //////////////////////////////////
		work_detial = rfq.get("Work_Details");
		jlist = work_detial.toJSONList();
		for each index j in jlist
		{
			if(j == 0)
			{
				mapvar = jlist.get(0);
				finalMap = mapvar.toMap();
				service_name_1 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "1";
			}
			else if(j == 1)
			{
				mapvar = jlist.get(1);
				finalMap = mapvar.toMap();
				service_name_2 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "2";
			}
			else if(j == 2)
			{
				mapvar = jlist.get(2);
				finalMap = mapvar.toMap();
				service_name_3 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "3";
			}
			else if(j == 3)
			{
				mapvar = jlist.get(3);
				finalMap = mapvar.toMap();
				service_name_4 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "4";
			}
			else if(j == 4)
			{
				mapvar = jlist.get(4);
				finalMap = mapvar.toMap();
				service_name_5 = ifnull(finalMap.get("Service").get("name"),"none");
				no_of_services = "5";
			}
		}
		////////////////////////////////// Email Body ///////////////////////////////////////////////
		Email_Temp_details = zoho.crm.getRecordById("Email_Templates",Email_temp);
		Email_Body = Email_Temp_details.get("Email_Body");
		//----------------------------------------------------------
		// Get all Vendors and there Emails to send email
		for each  vendor in vendorIdList
		{
			Other_Emails = List();
			vendorEmail = vendor.get("Vendor_Email");
			vendorName = vendor.get("Vendor").get("name");
			vendor_ID = vendor.get("Vendor").get("id");
			CC_email = vendor.get("CC_Email_Addresses");
			Vendor_Contacts = vendor.get("Other_Email_Addresses");
			if(Vendor_Contacts != null)
			{
				Contacts = Vendor_Contacts.replaceAll("\n",",");
				for each  data in Contacts
				{
					if(data.contains("Email"))
					{
						Other_Emails.add(data.getSuffix(":"));
					}
				}
			}
			/////////////////////////////////////////////////////////////////////////////////////////
			str = "<table align='center' cellpadding='10' width='600' style='width:600px;max-width:600px; margin:auto'><tr><td><div><span style='color: rgb(35, 37, 40);'>Dear " + vendorName + ",</span></div><div><span style='color: rgb(35, 37, 40);'><br></span></div><div><span style='color: rgb(35, 37, 40);'>" + Email_Body + "</span></div><br><div><span style='color: rgb(35, 37, 40);'>Service Location : " + servicelocation + ".</span></div></td></tr></table>";
			/////////////////////////////////////////////////////////////////////////////////////////////
			str = str + "<br><table  align='center' cellpadding='10' width='600' style='width:600px;max-width:600px; margin:auto' style='font-family: Arial, Helvetica,sans-serif; font-size:12px; color:#000; border-collapse:collapse;'><tr></td><td width='150' style='width:150px; max-width:150px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Service</td><td width='250' style='width:250px; max-width:250px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Description</td><td  width='100' style='width:100px; max-width:100px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Date & Time Needed By</td><td  width='100' style='width:100px; max-width:100px;font-weight:bold;background-color:#eaeaea;border-top:2px solid gray;border-bottom:2px solid gray;'>Notes</td>";
			//////////////////////////// Ends /////////////////////////////////////
			//----------------------------------------------------------
			// Work Details from RFQ to create Email body
			for each index j in jlist
			{
				mapvar = jlist.get(j);
				finalMap = mapvar.toMap();
				service_name = finalMap.get("Service").get("name");
				service_desc = finalMap.get("Service_Description");
				DateTime_Neededby = finalMap.get("Date_Time_Needed_By");
				////////////////////////////////////////////////////////////////////////////////////
				time1 = DateTime_Neededby.toTime("yyyy-MM-dd'T'HH:mm:ss").toString("yyyy-MM-dd'T'hh:mm:ss+05:00").toTime("yyyy-MM-dd'T'hh:mm:ss");
				timevalue = DateTime_Neededby.toTime("yyyy-MM-dd'T'HH:mm:ss").getTime();
				newtime = time1 + " " + timevalue.toString().getSuffix(" ");
				/////////////////////////////////////////////////////////////////////////////
				work_details_Notes = finalMap.get("Notes1");
				str = str + "<tr>";
				str = str + "<td width='150' style='width:150px; max-width:150px; border-bottom:2px solid #dadada'>" + service_name + "</td>";
				str = str + "<td width='250' style='width:250px; max-width:250px; border-bottom:2px solid #dadada'>" + service_desc + "</td>";
				str = str + "<td width='100' style='width:100px; max-width:100px; border-bottom:2px solid #dadada'>" + newtime + "</td>";
				str = str + "<td width='100' style='width:100px; max-width:100px; border-bottom:2px solid #dadada' >" + work_details_Notes + "</td>";
				str = str + "</tr>";
			}
			str = str + "<tr><td colspan='4'><br/>Please provide your quote below:</td></tr><tr><td colspan='4'><a href='https://creator.zohopublic.com/blinksigns/vendor-quotes/form-perma/Vendor_Proposal/EyX5htdueBaTH3VpCtJvgAk8H7RMZ62F95BjOrdr9rnvU9T6mGEY3rVZBa1yXSHymej3bEY32gBnAAbYSNv7XJHewpKqvptbXJm6?RFQ_ID=" + rfqid + "&Vendor_ID=" + vendor_ID + "'; style='-webkit-box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; -moz-box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; box-shadow:rgba(0,0,0,0.2) 0 1px 0 0; color:#FFFF; background: #4CAF50; border-radius:5px; -moz-border-radius:5px; -webkit-border-radius:5px; border:none; font-size:14px; font-weight:700; padding:4px 26px; text-shadow:rgb(255, 238, 102) 0px 1px 0px; background-color: rgb(128, 128, 128);'>Submit The Quote</a></td></tr><tr><td colspan='4' style='padding-top:0px;padding-bottom:0px;'>Thank You</td></tr><tr><td colspan='4'  style='padding-top:0px;padding-bottom:0px;'>BlinkSigns Team</td></tr></table>";
			if(Design_Work_Att1 != {})
			{
				str = str + "<br><br><b>Attachment Files: </b><br><br>";
			}
			for each  attachments in Design_Work_Att1
			{
				prefix = attachments.getPrefix("#");
				Postfix = attachments.getSuffix("#");
				str = str + "File link: <a href='" + prefix + "'>" + Postfix + "</a><br>";
			}
			/////////////////////////////////////////////////////////////////////////////////////////////
			sendmail
			[
				from :zoho.loginuserid
				to :vendorEmail,Other_Emails
				cc:CC_email
				subject :"Blink Signs Request for Quote -RFQ"
				message :str
				content type :HTML
				Attachments :file:Store_Images_Att1,file:Store_Images_Att2,file:Store_Images_Att3,file:Store_Images_Att4,file:Store_Images_Att5,file:Other_files_Att1,file:Other_files_Att2,file:Other_files_Att3,file:Other_files_Att4,file:Other_files_Att5
			]
		}
		//////////////////////// Update RFQ Status //////////////////////
		mp_rfq = Map();
		mp_rfq.put("RFQ_Status","Sent");
		update = zoho.crm.updateRecord("Requests_for_quote",rfqid.toLong(),mp_rfq);
		message_out = "RFQ Sent";
	}
	else if(Email_temp == null)
	{
		message_out = "Please select an Email Template";
	}
}
 catch (e)
{	sendmail
	[
		from :zoho.adminuserid
		to :"erp@blinksigns.com"
		subject :"Send RFQ / CRM Button RFQs"
		message :"ID: " + rfqid + " Root Cause: " + e
	]
}
return message_out;