try 
{
	rep = List();
	rep = step_id.replaceall("|||",",",true);
	steps_id = List();
	for each  data in rep
	{
		sign_project_obj = zoho.crm.getRelatedRecords("Workflow_Step","Deals",Sign_Pro_id.toLong());
		for each  data2 in sign_project_obj
		{
			if(data2.get("Completed_Steps").get("id") == data.toLong())
			{
				steps_id.add(data2.get("id"));
			}
		}
	}
	/////////////////////////////////////////////////////////////////////////////////////
	for each  Step_proj_id in steps_id
	{
		step_proj_details = zoho.crm.getRecordById("Sign_Projects_X_Step",Step_proj_id.toLong());
		Est_Due_date = ifnull(step_proj_details.get("Estimated_Due_Date"),"");
		today_date = today;
		mp1 = Map();
		mp1.put("Status","Pending");
		mp1.put("Dynamic_Due_Date",Est_Due_date);
		mp1.put("Completed_Date","");
		mp1.put("Actual_Start_Date","");
		mp1.put("Next_Contact_Date","");
		mp1.put("Marked_Pending_Manually",true);
		update = zoho.crm.updateRecord("Sign_Projects_X_Step",Step_proj_id.tolong(),mp1);
	}
	///////////////////// This is used only to trigger workflows of Sign Project ///////////////////
	Status_empty = Map();
	Status_empty.put("Status","");
	zoho.crm.updateRecord("Deals",Sign_Pro_id.toLong(),Status_empty,{"trigger":{"workflow"}});
	//////////////////////////////////////////////////////////////////////////////////////
	openUrl("https://crm.zoho.com/crm/org666155072/tab/Potentials/" + Sign_Pro_id,"parent window");
}
 catch (e)
{	sendmail
	[
		from :zoho.adminuserid
		to :"erp@blinksigns.com"
		subject :"Mark as pending / CRM Button Sign Project"
		message :"ID: " + Sign_Pro_id + " Root Cause: " + e
	]
}
return "This step has been marked as PENDING.";